// Mocks generated by Mockito 5.4.0 from annotations
// in clean_air/test/helpers/test_helpers.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;
import 'dart:ui' as _i9;

import 'package:clean_air/core/errors/auth_error.dart' as _i11;
import 'package:clean_air/models/air_quality.dart' as _i19;
import 'package:clean_air/models/c_air_quality.dart' as _i4;
import 'package:clean_air/models/condition.dart' as _i20;
import 'package:clean_air/models/pollutant.dart' as _i17;
import 'package:clean_air/models/search_data.dart' as _i18;
import 'package:clean_air/models/user.dart' as _i5;
import 'package:clean_air/services/air_quality_service.dart' as _i16;
import 'package:clean_air/services/auth_service.dart' as _i10;
import 'package:clean_air/services/favourites_service.dart' as _i21;
import 'package:clean_air/services/location_service.dart' as _i24;
import 'package:clean_air/services/media_service.dart' as _i22;
import 'package:clean_air/services/network_service.dart' as _i12;
import 'package:clean_air/services/open_mail_app_service.dart' as _i15;
import 'package:clean_air/services/secure_storage_service.dart' as _i14;
import 'package:dartz/dartz.dart' as _i2;
import 'package:firebase_storage/firebase_storage.dart' as _i6;
import 'package:flutter/material.dart' as _i8;
import 'package:image_picker/image_picker.dart' as _i23;
import 'package:internet_connection_checker/internet_connection_checker.dart'
    as _i13;
import 'package:mockito/mockito.dart' as _i1;
import 'package:stacked_services/stacked_services.dart' as _i7;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeOption_0<A> extends _i1.SmartFake implements _i2.Option<A> {
  _FakeOption_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeEither_1<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeStreamSubscription_2<T> extends _i1.SmartFake
    implements _i3.StreamSubscription<T> {
  _FakeStreamSubscription_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCAirQuality_3 extends _i1.SmartFake implements _i4.CAirQuality {
  _FakeCAirQuality_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUser_4 extends _i1.SmartFake implements _i5.User {
  _FakeUser_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeReference_5 extends _i1.SmartFake implements _i6.Reference {
  _FakeReference_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [NavigationService].
///
/// See the documentation for Mockito's code generation for more information.
class MockNavigationService extends _i1.Mock implements _i7.NavigationService {
  @override
  String get previousRoute => (super.noSuchMethod(
        Invocation.getter(#previousRoute),
        returnValue: '',
        returnValueForMissingStub: '',
      ) as String);
  @override
  String get currentRoute => (super.noSuchMethod(
        Invocation.getter(#currentRoute),
        returnValue: '',
        returnValueForMissingStub: '',
      ) as String);
  @override
  _i8.GlobalKey<_i8.NavigatorState>? nestedNavigationKey(int? index) =>
      (super.noSuchMethod(
        Invocation.method(
          #nestedNavigationKey,
          [index],
        ),
        returnValueForMissingStub: null,
      ) as _i8.GlobalKey<_i8.NavigatorState>?);
  @override
  void config({
    bool? enableLog,
    bool? defaultPopGesture,
    bool? defaultOpaqueRoute,
    Duration? defaultDurationTransition,
    bool? defaultGlobalState,
    _i7.Transition? defaultTransitionStyle,
    String? defaultTransition,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #config,
          [],
          {
            #enableLog: enableLog,
            #defaultPopGesture: defaultPopGesture,
            #defaultOpaqueRoute: defaultOpaqueRoute,
            #defaultDurationTransition: defaultDurationTransition,
            #defaultGlobalState: defaultGlobalState,
            #defaultTransitionStyle: defaultTransitionStyle,
            #defaultTransition: defaultTransition,
          },
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i3.Future<T?>? navigateWithTransition<T>(
    _i8.Widget? page, {
    bool? opaque,
    String? transition = r'',
    Duration? duration,
    bool? popGesture,
    int? id,
    _i8.Curve? curve,
    bool? fullscreenDialog = false,
    bool? preventDuplicates = true,
    _i7.Transition? transitionClass,
    _i7.Transition? transitionStyle,
    String? routeName,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #navigateWithTransition,
          [page],
          {
            #opaque: opaque,
            #transition: transition,
            #duration: duration,
            #popGesture: popGesture,
            #id: id,
            #curve: curve,
            #fullscreenDialog: fullscreenDialog,
            #preventDuplicates: preventDuplicates,
            #transitionClass: transitionClass,
            #transitionStyle: transitionStyle,
            #routeName: routeName,
          },
        ),
        returnValueForMissingStub: null,
      ) as _i3.Future<T?>?);
  @override
  _i3.Future<T?>? replaceWithTransition<T>(
    _i8.Widget? page, {
    bool? opaque,
    String? transition = r'',
    Duration? duration,
    bool? popGesture,
    int? id,
    _i8.Curve? curve,
    bool? fullscreenDialog = false,
    bool? preventDuplicates = true,
    _i7.Transition? transitionClass,
    _i7.Transition? transitionStyle,
    String? routeName,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #replaceWithTransition,
          [page],
          {
            #opaque: opaque,
            #transition: transition,
            #duration: duration,
            #popGesture: popGesture,
            #id: id,
            #curve: curve,
            #fullscreenDialog: fullscreenDialog,
            #preventDuplicates: preventDuplicates,
            #transitionClass: transitionClass,
            #transitionStyle: transitionStyle,
            #routeName: routeName,
          },
        ),
        returnValueForMissingStub: null,
      ) as _i3.Future<T?>?);
  @override
  bool back<T>({
    dynamic result,
    int? id,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #back,
          [],
          {
            #result: result,
            #id: id,
          },
        ),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);
  @override
  void popUntil(
    _i8.RoutePredicate? predicate, {
    int? id,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #popUntil,
          [predicate],
          {#id: id},
        ),
        returnValueForMissingStub: null,
      );
  @override
  void popRepeated(int? popTimes) => super.noSuchMethod(
        Invocation.method(
          #popRepeated,
          [popTimes],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i3.Future<T?>? navigateTo<T>(
    String? routeName, {
    dynamic arguments,
    int? id,
    bool? preventDuplicates = true,
    Map<String, String>? parameters,
    _i8.RouteTransitionsBuilder? transition,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #navigateTo,
          [routeName],
          {
            #arguments: arguments,
            #id: id,
            #preventDuplicates: preventDuplicates,
            #parameters: parameters,
            #transition: transition,
          },
        ),
        returnValueForMissingStub: null,
      ) as _i3.Future<T?>?);
  @override
  _i3.Future<T?>? navigateToView<T>(
    _i8.Widget? view, {
    dynamic arguments,
    int? id,
    bool? opaque,
    _i8.Curve? curve,
    Duration? duration,
    bool? fullscreenDialog = false,
    bool? popGesture,
    bool? preventDuplicates = true,
    _i7.Transition? transition,
    _i7.Transition? transitionStyle,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #navigateToView,
          [view],
          {
            #arguments: arguments,
            #id: id,
            #opaque: opaque,
            #curve: curve,
            #duration: duration,
            #fullscreenDialog: fullscreenDialog,
            #popGesture: popGesture,
            #preventDuplicates: preventDuplicates,
            #transition: transition,
            #transitionStyle: transitionStyle,
          },
        ),
        returnValueForMissingStub: null,
      ) as _i3.Future<T?>?);
  @override
  _i3.Future<T?>? replaceWith<T>(
    String? routeName, {
    dynamic arguments,
    int? id,
    bool? preventDuplicates = true,
    Map<String, String>? parameters,
    _i8.RouteTransitionsBuilder? transition,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #replaceWith,
          [routeName],
          {
            #arguments: arguments,
            #id: id,
            #preventDuplicates: preventDuplicates,
            #parameters: parameters,
            #transition: transition,
          },
        ),
        returnValueForMissingStub: null,
      ) as _i3.Future<T?>?);
  @override
  _i3.Future<T?>? clearStackAndShow<T>(
    String? routeName, {
    dynamic arguments,
    int? id,
    Map<String, String>? parameters,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #clearStackAndShow,
          [routeName],
          {
            #arguments: arguments,
            #id: id,
            #parameters: parameters,
          },
        ),
        returnValueForMissingStub: null,
      ) as _i3.Future<T?>?);
  @override
  _i3.Future<T?>? clearStackAndShowView<T>(
    _i8.Widget? view, {
    dynamic arguments,
    int? id,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #clearStackAndShowView,
          [view],
          {
            #arguments: arguments,
            #id: id,
          },
        ),
        returnValueForMissingStub: null,
      ) as _i3.Future<T?>?);
  @override
  _i3.Future<T?>? clearTillFirstAndShow<T>(
    String? routeName, {
    dynamic arguments,
    int? id,
    bool? preventDuplicates = true,
    Map<String, String>? parameters,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #clearTillFirstAndShow,
          [routeName],
          {
            #arguments: arguments,
            #id: id,
            #preventDuplicates: preventDuplicates,
            #parameters: parameters,
          },
        ),
        returnValueForMissingStub: null,
      ) as _i3.Future<T?>?);
  @override
  _i3.Future<T?>? clearTillFirstAndShowView<T>(
    _i8.Widget? view, {
    dynamic arguments,
    int? id,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #clearTillFirstAndShowView,
          [view],
          {
            #arguments: arguments,
            #id: id,
          },
        ),
        returnValueForMissingStub: null,
      ) as _i3.Future<T?>?);
  @override
  _i3.Future<T?>? pushNamedAndRemoveUntil<T>(
    String? routeName, {
    _i8.RoutePredicate? predicate,
    dynamic arguments,
    int? id,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #pushNamedAndRemoveUntil,
          [routeName],
          {
            #predicate: predicate,
            #arguments: arguments,
            #id: id,
          },
        ),
        returnValueForMissingStub: null,
      ) as _i3.Future<T?>?);
}

/// A class which mocks [BottomSheetService].
///
/// See the documentation for Mockito's code generation for more information.
class MockBottomSheetService extends _i1.Mock
    implements _i7.BottomSheetService {
  @override
  void setCustomSheetBuilders(Map<dynamic, _i7.SheetBuilder>? builders) =>
      super.noSuchMethod(
        Invocation.method(
          #setCustomSheetBuilders,
          [builders],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i3.Future<_i7.SheetResponse<dynamic>?> showBottomSheet({
    required String? title,
    String? description,
    String? confirmButtonTitle = r'Ok',
    String? cancelButtonTitle,
    bool? enableDrag = true,
    bool? barrierDismissible = true,
    bool? isScrollControlled = false,
    Duration? exitBottomSheetDuration,
    Duration? enterBottomSheetDuration,
    bool? ignoreSafeArea,
    bool? useRootNavigator = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #showBottomSheet,
          [],
          {
            #title: title,
            #description: description,
            #confirmButtonTitle: confirmButtonTitle,
            #cancelButtonTitle: cancelButtonTitle,
            #enableDrag: enableDrag,
            #barrierDismissible: barrierDismissible,
            #isScrollControlled: isScrollControlled,
            #exitBottomSheetDuration: exitBottomSheetDuration,
            #enterBottomSheetDuration: enterBottomSheetDuration,
            #ignoreSafeArea: ignoreSafeArea,
            #useRootNavigator: useRootNavigator,
          },
        ),
        returnValue: _i3.Future<_i7.SheetResponse<dynamic>?>.value(),
        returnValueForMissingStub:
            _i3.Future<_i7.SheetResponse<dynamic>?>.value(),
      ) as _i3.Future<_i7.SheetResponse<dynamic>?>);
  @override
  _i3.Future<_i7.SheetResponse<T>?> showCustomSheet<T, R>({
    dynamic variant,
    String? title,
    String? description,
    bool? hasImage = false,
    String? imageUrl,
    bool? showIconInMainButton = false,
    String? mainButtonTitle,
    bool? showIconInSecondaryButton = false,
    String? secondaryButtonTitle,
    bool? showIconInAdditionalButton = false,
    String? additionalButtonTitle,
    bool? takesInput = false,
    _i9.Color? barrierColor = const _i9.Color(2315255808),
    bool? barrierDismissible = true,
    bool? isScrollControlled = false,
    String? barrierLabel = r'',
    dynamic customData,
    R? data,
    bool? enableDrag = true,
    Duration? exitBottomSheetDuration,
    Duration? enterBottomSheetDuration,
    bool? ignoreSafeArea,
    bool? useRootNavigator = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #showCustomSheet,
          [],
          {
            #variant: variant,
            #title: title,
            #description: description,
            #hasImage: hasImage,
            #imageUrl: imageUrl,
            #showIconInMainButton: showIconInMainButton,
            #mainButtonTitle: mainButtonTitle,
            #showIconInSecondaryButton: showIconInSecondaryButton,
            #secondaryButtonTitle: secondaryButtonTitle,
            #showIconInAdditionalButton: showIconInAdditionalButton,
            #additionalButtonTitle: additionalButtonTitle,
            #takesInput: takesInput,
            #barrierColor: barrierColor,
            #barrierDismissible: barrierDismissible,
            #isScrollControlled: isScrollControlled,
            #barrierLabel: barrierLabel,
            #customData: customData,
            #data: data,
            #enableDrag: enableDrag,
            #exitBottomSheetDuration: exitBottomSheetDuration,
            #enterBottomSheetDuration: enterBottomSheetDuration,
            #ignoreSafeArea: ignoreSafeArea,
            #useRootNavigator: useRootNavigator,
          },
        ),
        returnValue: _i3.Future<_i7.SheetResponse<T>?>.value(),
        returnValueForMissingStub: _i3.Future<_i7.SheetResponse<T>?>.value(),
      ) as _i3.Future<_i7.SheetResponse<T>?>);
  @override
  void completeSheet(_i7.SheetResponse<dynamic>? response) =>
      super.noSuchMethod(
        Invocation.method(
          #completeSheet,
          [response],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [DialogService].
///
/// See the documentation for Mockito's code generation for more information.
class MockDialogService extends _i1.Mock implements _i7.DialogService {
  @override
  void registerCustomDialogBuilders(
          Map<dynamic, _i7.DialogBuilder>? builders) =>
      super.noSuchMethod(
        Invocation.method(
          #registerCustomDialogBuilders,
          [builders],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void registerCustomDialogBuilder({
    required dynamic variant,
    required _i8.Widget Function(
      _i8.BuildContext,
      _i7.DialogRequest<dynamic>,
      dynamic Function(_i7.DialogResponse<dynamic>),
    )? builder,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #registerCustomDialogBuilder,
          [],
          {
            #variant: variant,
            #builder: builder,
          },
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i3.Future<_i7.DialogResponse<dynamic>?> showDialog({
    String? title,
    String? description,
    String? cancelTitle,
    _i9.Color? cancelTitleColor,
    String? buttonTitle = r'Ok',
    _i9.Color? buttonTitleColor,
    bool? barrierDismissible = false,
    _i7.DialogPlatform? dialogPlatform,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #showDialog,
          [],
          {
            #title: title,
            #description: description,
            #cancelTitle: cancelTitle,
            #cancelTitleColor: cancelTitleColor,
            #buttonTitle: buttonTitle,
            #buttonTitleColor: buttonTitleColor,
            #barrierDismissible: barrierDismissible,
            #dialogPlatform: dialogPlatform,
          },
        ),
        returnValue: _i3.Future<_i7.DialogResponse<dynamic>?>.value(),
        returnValueForMissingStub:
            _i3.Future<_i7.DialogResponse<dynamic>?>.value(),
      ) as _i3.Future<_i7.DialogResponse<dynamic>?>);
  @override
  _i3.Future<_i7.DialogResponse<T>?> showCustomDialog<T, R>({
    dynamic variant,
    String? title,
    String? description,
    bool? hasImage = false,
    String? imageUrl,
    bool? showIconInMainButton = false,
    String? mainButtonTitle,
    bool? showIconInSecondaryButton = false,
    String? secondaryButtonTitle,
    bool? showIconInAdditionalButton = false,
    String? additionalButtonTitle,
    bool? takesInput = false,
    _i9.Color? barrierColor = const _i9.Color(2315255808),
    bool? barrierDismissible = false,
    String? barrierLabel = r'',
    dynamic customData,
    R? data,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #showCustomDialog,
          [],
          {
            #variant: variant,
            #title: title,
            #description: description,
            #hasImage: hasImage,
            #imageUrl: imageUrl,
            #showIconInMainButton: showIconInMainButton,
            #mainButtonTitle: mainButtonTitle,
            #showIconInSecondaryButton: showIconInSecondaryButton,
            #secondaryButtonTitle: secondaryButtonTitle,
            #showIconInAdditionalButton: showIconInAdditionalButton,
            #additionalButtonTitle: additionalButtonTitle,
            #takesInput: takesInput,
            #barrierColor: barrierColor,
            #barrierDismissible: barrierDismissible,
            #barrierLabel: barrierLabel,
            #customData: customData,
            #data: data,
          },
        ),
        returnValue: _i3.Future<_i7.DialogResponse<T>?>.value(),
        returnValueForMissingStub: _i3.Future<_i7.DialogResponse<T>?>.value(),
      ) as _i3.Future<_i7.DialogResponse<T>?>);
  @override
  _i3.Future<_i7.DialogResponse<dynamic>?> showConfirmationDialog({
    String? title,
    String? description,
    String? cancelTitle = r'Cancel',
    _i9.Color? cancelTitleColor,
    String? confirmationTitle = r'Ok',
    _i9.Color? confirmationTitleColor,
    bool? barrierDismissible = false,
    _i7.DialogPlatform? dialogPlatform,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #showConfirmationDialog,
          [],
          {
            #title: title,
            #description: description,
            #cancelTitle: cancelTitle,
            #cancelTitleColor: cancelTitleColor,
            #confirmationTitle: confirmationTitle,
            #confirmationTitleColor: confirmationTitleColor,
            #barrierDismissible: barrierDismissible,
            #dialogPlatform: dialogPlatform,
          },
        ),
        returnValue: _i3.Future<_i7.DialogResponse<dynamic>?>.value(),
        returnValueForMissingStub:
            _i3.Future<_i7.DialogResponse<dynamic>?>.value(),
      ) as _i3.Future<_i7.DialogResponse<dynamic>?>);
  @override
  void completeDialog(_i7.DialogResponse<dynamic>? response) =>
      super.noSuchMethod(
        Invocation.method(
          #completeDialog,
          [response],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [AuthService].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthService extends _i1.Mock implements _i10.AuthService {
  @override
  bool get isAuthenticated => (super.noSuchMethod(
        Invocation.getter(#isAuthenticated),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);
  @override
  bool get isEmailVerified => (super.noSuchMethod(
        Invocation.getter(#isEmailVerified),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);
  @override
  int get listenersCount => (super.noSuchMethod(
        Invocation.getter(#listenersCount),
        returnValue: 0,
        returnValueForMissingStub: 0,
      ) as int);
  @override
  _i3.Future<void> checkAuthenticated() => (super.noSuchMethod(
        Invocation.method(
          #checkAuthenticated,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
  @override
  _i3.Future<_i2.Option<_i2.Either<_i11.AuthError, bool>>>
      checkEmailVerified() => (super.noSuchMethod(
            Invocation.method(
              #checkEmailVerified,
              [],
            ),
            returnValue:
                _i3.Future<_i2.Option<_i2.Either<_i11.AuthError, bool>>>.value(
                    _FakeOption_0<_i2.Either<_i11.AuthError, bool>>(
              this,
              Invocation.method(
                #checkEmailVerified,
                [],
              ),
            )),
            returnValueForMissingStub:
                _i3.Future<_i2.Option<_i2.Either<_i11.AuthError, bool>>>.value(
                    _FakeOption_0<_i2.Either<_i11.AuthError, bool>>(
              this,
              Invocation.method(
                #checkEmailVerified,
                [],
              ),
            )),
          ) as _i3.Future<_i2.Option<_i2.Either<_i11.AuthError, bool>>>);
  @override
  _i3.Future<_i2.Either<_i11.AuthError, _i2.Unit>> deleteAccount() =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteAccount,
          [],
        ),
        returnValue: _i3.Future<_i2.Either<_i11.AuthError, _i2.Unit>>.value(
            _FakeEither_1<_i11.AuthError, _i2.Unit>(
          this,
          Invocation.method(
            #deleteAccount,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i3.Future<_i2.Either<_i11.AuthError, _i2.Unit>>.value(
                _FakeEither_1<_i11.AuthError, _i2.Unit>(
          this,
          Invocation.method(
            #deleteAccount,
            [],
          ),
        )),
      ) as _i3.Future<_i2.Either<_i11.AuthError, _i2.Unit>>);
  @override
  _i3.Future<_i2.Either<_i11.AuthError, _i2.Unit>> deleteAccountFavourites() =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteAccountFavourites,
          [],
        ),
        returnValue: _i3.Future<_i2.Either<_i11.AuthError, _i2.Unit>>.value(
            _FakeEither_1<_i11.AuthError, _i2.Unit>(
          this,
          Invocation.method(
            #deleteAccountFavourites,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i3.Future<_i2.Either<_i11.AuthError, _i2.Unit>>.value(
                _FakeEither_1<_i11.AuthError, _i2.Unit>(
          this,
          Invocation.method(
            #deleteAccountFavourites,
            [],
          ),
        )),
      ) as _i3.Future<_i2.Either<_i11.AuthError, _i2.Unit>>);
  @override
  _i3.Future<_i2.Either<_i11.AuthError, _i2.Unit>> deleteProfileImage() =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteProfileImage,
          [],
        ),
        returnValue: _i3.Future<_i2.Either<_i11.AuthError, _i2.Unit>>.value(
            _FakeEither_1<_i11.AuthError, _i2.Unit>(
          this,
          Invocation.method(
            #deleteProfileImage,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i3.Future<_i2.Either<_i11.AuthError, _i2.Unit>>.value(
                _FakeEither_1<_i11.AuthError, _i2.Unit>(
          this,
          Invocation.method(
            #deleteProfileImage,
            [],
          ),
        )),
      ) as _i3.Future<_i2.Either<_i11.AuthError, _i2.Unit>>);
  @override
  _i3.Future<_i2.Either<_i11.AuthError, _i2.Unit>> forgotPassword(
          String? email) =>
      (super.noSuchMethod(
        Invocation.method(
          #forgotPassword,
          [email],
        ),
        returnValue: _i3.Future<_i2.Either<_i11.AuthError, _i2.Unit>>.value(
            _FakeEither_1<_i11.AuthError, _i2.Unit>(
          this,
          Invocation.method(
            #forgotPassword,
            [email],
          ),
        )),
        returnValueForMissingStub:
            _i3.Future<_i2.Either<_i11.AuthError, _i2.Unit>>.value(
                _FakeEither_1<_i11.AuthError, _i2.Unit>(
          this,
          Invocation.method(
            #forgotPassword,
            [email],
          ),
        )),
      ) as _i3.Future<_i2.Either<_i11.AuthError, _i2.Unit>>);
  @override
  _i3.Future<_i2.Either<_i11.AuthError, _i2.Unit>> googleLogin() =>
      (super.noSuchMethod(
        Invocation.method(
          #googleLogin,
          [],
        ),
        returnValue: _i3.Future<_i2.Either<_i11.AuthError, _i2.Unit>>.value(
            _FakeEither_1<_i11.AuthError, _i2.Unit>(
          this,
          Invocation.method(
            #googleLogin,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i3.Future<_i2.Either<_i11.AuthError, _i2.Unit>>.value(
                _FakeEither_1<_i11.AuthError, _i2.Unit>(
          this,
          Invocation.method(
            #googleLogin,
            [],
          ),
        )),
      ) as _i3.Future<_i2.Either<_i11.AuthError, _i2.Unit>>);
  @override
  _i3.Future<_i2.Either<_i11.AuthError, _i2.Unit>> login({
    required String? email,
    required String? password,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #login,
          [],
          {
            #email: email,
            #password: password,
          },
        ),
        returnValue: _i3.Future<_i2.Either<_i11.AuthError, _i2.Unit>>.value(
            _FakeEither_1<_i11.AuthError, _i2.Unit>(
          this,
          Invocation.method(
            #login,
            [],
            {
              #email: email,
              #password: password,
            },
          ),
        )),
        returnValueForMissingStub:
            _i3.Future<_i2.Either<_i11.AuthError, _i2.Unit>>.value(
                _FakeEither_1<_i11.AuthError, _i2.Unit>(
          this,
          Invocation.method(
            #login,
            [],
            {
              #email: email,
              #password: password,
            },
          ),
        )),
      ) as _i3.Future<_i2.Either<_i11.AuthError, _i2.Unit>>);
  @override
  _i3.Future<void> logout() => (super.noSuchMethod(
        Invocation.method(
          #logout,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
  @override
  _i3.Future<_i2.Either<_i11.AuthError, _i2.Unit>> reauthenticate(
          String? password) =>
      (super.noSuchMethod(
        Invocation.method(
          #reauthenticate,
          [password],
        ),
        returnValue: _i3.Future<_i2.Either<_i11.AuthError, _i2.Unit>>.value(
            _FakeEither_1<_i11.AuthError, _i2.Unit>(
          this,
          Invocation.method(
            #reauthenticate,
            [password],
          ),
        )),
        returnValueForMissingStub:
            _i3.Future<_i2.Either<_i11.AuthError, _i2.Unit>>.value(
                _FakeEither_1<_i11.AuthError, _i2.Unit>(
          this,
          Invocation.method(
            #reauthenticate,
            [password],
          ),
        )),
      ) as _i3.Future<_i2.Either<_i11.AuthError, _i2.Unit>>);
  @override
  _i3.Future<_i2.Either<_i11.AuthError, _i2.Unit>> register({
    required String? name,
    required String? email,
    required String? password,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #register,
          [],
          {
            #name: name,
            #email: email,
            #password: password,
          },
        ),
        returnValue: _i3.Future<_i2.Either<_i11.AuthError, _i2.Unit>>.value(
            _FakeEither_1<_i11.AuthError, _i2.Unit>(
          this,
          Invocation.method(
            #register,
            [],
            {
              #name: name,
              #email: email,
              #password: password,
            },
          ),
        )),
        returnValueForMissingStub:
            _i3.Future<_i2.Either<_i11.AuthError, _i2.Unit>>.value(
                _FakeEither_1<_i11.AuthError, _i2.Unit>(
          this,
          Invocation.method(
            #register,
            [],
            {
              #name: name,
              #email: email,
              #password: password,
            },
          ),
        )),
      ) as _i3.Future<_i2.Either<_i11.AuthError, _i2.Unit>>);
  @override
  _i3.Future<_i2.Either<_i11.AuthError, _i2.Unit>> sendPasswordResetEmail() =>
      (super.noSuchMethod(
        Invocation.method(
          #sendPasswordResetEmail,
          [],
        ),
        returnValue: _i3.Future<_i2.Either<_i11.AuthError, _i2.Unit>>.value(
            _FakeEither_1<_i11.AuthError, _i2.Unit>(
          this,
          Invocation.method(
            #sendPasswordResetEmail,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i3.Future<_i2.Either<_i11.AuthError, _i2.Unit>>.value(
                _FakeEither_1<_i11.AuthError, _i2.Unit>(
          this,
          Invocation.method(
            #sendPasswordResetEmail,
            [],
          ),
        )),
      ) as _i3.Future<_i2.Either<_i11.AuthError, _i2.Unit>>);
  @override
  _i3.Future<_i2.Either<_i11.AuthError, _i2.Unit>> sendVerificationEmail() =>
      (super.noSuchMethod(
        Invocation.method(
          #sendVerificationEmail,
          [],
        ),
        returnValue: _i3.Future<_i2.Either<_i11.AuthError, _i2.Unit>>.value(
            _FakeEither_1<_i11.AuthError, _i2.Unit>(
          this,
          Invocation.method(
            #sendVerificationEmail,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i3.Future<_i2.Either<_i11.AuthError, _i2.Unit>>.value(
                _FakeEither_1<_i11.AuthError, _i2.Unit>(
          this,
          Invocation.method(
            #sendVerificationEmail,
            [],
          ),
        )),
      ) as _i3.Future<_i2.Either<_i11.AuthError, _i2.Unit>>);
  @override
  _i3.Future<_i2.Either<_i11.AuthError, _i2.Unit>> updateEmailAddress(
          String? newEmail) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateEmailAddress,
          [newEmail],
        ),
        returnValue: _i3.Future<_i2.Either<_i11.AuthError, _i2.Unit>>.value(
            _FakeEither_1<_i11.AuthError, _i2.Unit>(
          this,
          Invocation.method(
            #updateEmailAddress,
            [newEmail],
          ),
        )),
        returnValueForMissingStub:
            _i3.Future<_i2.Either<_i11.AuthError, _i2.Unit>>.value(
                _FakeEither_1<_i11.AuthError, _i2.Unit>(
          this,
          Invocation.method(
            #updateEmailAddress,
            [newEmail],
          ),
        )),
      ) as _i3.Future<_i2.Either<_i11.AuthError, _i2.Unit>>);
  @override
  _i3.Future<_i2.Either<_i11.AuthError, _i2.Unit>> updatePassword(
          String? newPassword) =>
      (super.noSuchMethod(
        Invocation.method(
          #updatePassword,
          [newPassword],
        ),
        returnValue: _i3.Future<_i2.Either<_i11.AuthError, _i2.Unit>>.value(
            _FakeEither_1<_i11.AuthError, _i2.Unit>(
          this,
          Invocation.method(
            #updatePassword,
            [newPassword],
          ),
        )),
        returnValueForMissingStub:
            _i3.Future<_i2.Either<_i11.AuthError, _i2.Unit>>.value(
                _FakeEither_1<_i11.AuthError, _i2.Unit>(
          this,
          Invocation.method(
            #updatePassword,
            [newPassword],
          ),
        )),
      ) as _i3.Future<_i2.Either<_i11.AuthError, _i2.Unit>>);
  @override
  _i3.Future<_i2.Either<_i11.AuthError, _i2.Unit>> updateProfile(_i5.User? u) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateProfile,
          [u],
        ),
        returnValue: _i3.Future<_i2.Either<_i11.AuthError, _i2.Unit>>.value(
            _FakeEither_1<_i11.AuthError, _i2.Unit>(
          this,
          Invocation.method(
            #updateProfile,
            [u],
          ),
        )),
        returnValueForMissingStub:
            _i3.Future<_i2.Either<_i11.AuthError, _i2.Unit>>.value(
                _FakeEither_1<_i11.AuthError, _i2.Unit>(
          this,
          Invocation.method(
            #updateProfile,
            [u],
          ),
        )),
      ) as _i3.Future<_i2.Either<_i11.AuthError, _i2.Unit>>);
  @override
  void listenToReactiveValues(List<dynamic>? reactiveValues) =>
      super.noSuchMethod(
        Invocation.method(
          #listenToReactiveValues,
          [reactiveValues],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void addListener(void Function()? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void removeListener(void Function()? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [NetworkService].
///
/// See the documentation for Mockito's code generation for more information.
class MockNetworkService extends _i1.Mock implements _i12.NetworkService {
  @override
  _i12.NetworkStatus get status => (super.noSuchMethod(
        Invocation.getter(#status),
        returnValue: _i12.NetworkStatus.connected,
        returnValueForMissingStub: _i12.NetworkStatus.connected,
      ) as _i12.NetworkStatus);
  @override
  int get listenersCount => (super.noSuchMethod(
        Invocation.getter(#listenersCount),
        returnValue: 0,
        returnValueForMissingStub: 0,
      ) as int);
  @override
  _i3.StreamSubscription<_i13.InternetConnectionStatus> listenForChange() =>
      (super.noSuchMethod(
        Invocation.method(
          #listenForChange,
          [],
        ),
        returnValue: _FakeStreamSubscription_2<_i13.InternetConnectionStatus>(
          this,
          Invocation.method(
            #listenForChange,
            [],
          ),
        ),
        returnValueForMissingStub:
            _FakeStreamSubscription_2<_i13.InternetConnectionStatus>(
          this,
          Invocation.method(
            #listenForChange,
            [],
          ),
        ),
      ) as _i3.StreamSubscription<_i13.InternetConnectionStatus>);
  @override
  void onResume() => super.noSuchMethod(
        Invocation.method(
          #onResume,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void onPause() => super.noSuchMethod(
        Invocation.method(
          #onPause,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void listenToReactiveValues(List<dynamic>? reactiveValues) =>
      super.noSuchMethod(
        Invocation.method(
          #listenToReactiveValues,
          [reactiveValues],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void addListener(void Function()? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void removeListener(void Function()? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [SecureStorageService].
///
/// See the documentation for Mockito's code generation for more information.
class MockSecureStorageService extends _i1.Mock
    implements _i14.SecureStorageService {
  @override
  _i3.Future<void> delete(String? key) => (super.noSuchMethod(
        Invocation.method(
          #delete,
          [key],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
  @override
  _i3.Future<void> deleteAll() => (super.noSuchMethod(
        Invocation.method(
          #deleteAll,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
  @override
  _i3.Future<dynamic> read(String? key) => (super.noSuchMethod(
        Invocation.method(
          #read,
          [key],
        ),
        returnValue: _i3.Future<dynamic>.value(),
        returnValueForMissingStub: _i3.Future<dynamic>.value(),
      ) as _i3.Future<dynamic>);
  @override
  _i3.Future<void> write({
    required String? key,
    required String? value,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #write,
          [],
          {
            #key: key,
            #value: value,
          },
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
}

/// A class which mocks [OpenMailAppService].
///
/// See the documentation for Mockito's code generation for more information.
class MockOpenMailAppService extends _i1.Mock
    implements _i15.OpenMailAppService {
  @override
  _i3.Future<void> openMailApp() => (super.noSuchMethod(
        Invocation.method(
          #openMailApp,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
}

/// A class which mocks [AirQualityService].
///
/// See the documentation for Mockito's code generation for more information.
class MockAirQualityService extends _i1.Mock implements _i16.AirQualityService {
  @override
  List<_i17.Pollutant> get pollutants => (super.noSuchMethod(
        Invocation.getter(#pollutants),
        returnValue: <_i17.Pollutant>[],
        returnValueForMissingStub: <_i17.Pollutant>[],
      ) as List<_i17.Pollutant>);
  @override
  _i4.CAirQuality get conditionedAQI => (super.noSuchMethod(
        Invocation.getter(#conditionedAQI),
        returnValue: _FakeCAirQuality_3(
          this,
          Invocation.getter(#conditionedAQI),
        ),
        returnValueForMissingStub: _FakeCAirQuality_3(
          this,
          Invocation.getter(#conditionedAQI),
        ),
      ) as _i4.CAirQuality);
  @override
  List<_i18.SearchData?> get searchResult => (super.noSuchMethod(
        Invocation.getter(#searchResult),
        returnValue: <_i18.SearchData?>[],
        returnValueForMissingStub: <_i18.SearchData?>[],
      ) as List<_i18.SearchData?>);
  @override
  int get listenersCount => (super.noSuchMethod(
        Invocation.getter(#listenersCount),
        returnValue: 0,
        returnValueForMissingStub: 0,
      ) as int);
  @override
  _i3.Future<_i19.AirQuality?> getAqiByGeo(
    double? lat,
    double? lon,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAqiByGeo,
          [
            lat,
            lon,
          ],
        ),
        returnValue: _i3.Future<_i19.AirQuality?>.value(),
        returnValueForMissingStub: _i3.Future<_i19.AirQuality?>.value(),
      ) as _i3.Future<_i19.AirQuality?>);
  @override
  _i3.Future<_i19.AirQuality?> getCurrentLocationAQI() => (super.noSuchMethod(
        Invocation.method(
          #getCurrentLocationAQI,
          [],
        ),
        returnValue: _i3.Future<_i19.AirQuality?>.value(),
        returnValueForMissingStub: _i3.Future<_i19.AirQuality?>.value(),
      ) as _i3.Future<_i19.AirQuality?>);
  @override
  _i3.Future<List<_i18.SearchData?>> searchByName(String? keyword) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchByName,
          [keyword],
        ),
        returnValue:
            _i3.Future<List<_i18.SearchData?>>.value(<_i18.SearchData?>[]),
        returnValueForMissingStub:
            _i3.Future<List<_i18.SearchData?>>.value(<_i18.SearchData?>[]),
      ) as _i3.Future<List<_i18.SearchData?>>);
  @override
  _i3.Future<_i4.CAirQuality?> getConditionedAQI() => (super.noSuchMethod(
        Invocation.method(
          #getConditionedAQI,
          [],
        ),
        returnValue: _i3.Future<_i4.CAirQuality?>.value(),
        returnValueForMissingStub: _i3.Future<_i4.CAirQuality?>.value(),
      ) as _i3.Future<_i4.CAirQuality?>);
  @override
  _i3.Future<void> updateConditionedAQI(
    _i20.Condition? con, [
    String? domPol,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateConditionedAQI,
          [
            con,
            domPol,
          ],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
  @override
  void listenToReactiveValues(List<dynamic>? reactiveValues) =>
      super.noSuchMethod(
        Invocation.method(
          #listenToReactiveValues,
          [reactiveValues],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void addListener(void Function()? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void removeListener(void Function()? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [FavouritesService].
///
/// See the documentation for Mockito's code generation for more information.
class MockFavouritesService extends _i1.Mock implements _i21.FavouritesService {
  @override
  _i12.NetworkStatus get networkStatus => (super.noSuchMethod(
        Invocation.getter(#networkStatus),
        returnValue: _i12.NetworkStatus.connected,
        returnValueForMissingStub: _i12.NetworkStatus.connected,
      ) as _i12.NetworkStatus);
  @override
  _i5.User get user => (super.noSuchMethod(
        Invocation.getter(#user),
        returnValue: _FakeUser_4(
          this,
          Invocation.getter(#user),
        ),
        returnValueForMissingStub: _FakeUser_4(
          this,
          Invocation.getter(#user),
        ),
      ) as _i5.User);
  @override
  Set<_i5.Favourite?> get favourites => (super.noSuchMethod(
        Invocation.getter(#favourites),
        returnValue: <_i5.Favourite?>{},
        returnValueForMissingStub: <_i5.Favourite?>{},
      ) as Set<_i5.Favourite?>);
  @override
  int get listenersCount => (super.noSuchMethod(
        Invocation.getter(#listenersCount),
        returnValue: 0,
        returnValueForMissingStub: 0,
      ) as int);
  @override
  bool isFavourite(_i5.Favourite? item) => (super.noSuchMethod(
        Invocation.method(
          #isFavourite,
          [item],
        ),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);
  @override
  _i3.Future<void> removeFavourite(_i5.Favourite? item) => (super.noSuchMethod(
        Invocation.method(
          #removeFavourite,
          [item],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
  @override
  _i3.Future<void> retrieveAllFavourites() => (super.noSuchMethod(
        Invocation.method(
          #retrieveAllFavourites,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
  @override
  _i3.Future<void> pullFromLocal() => (super.noSuchMethod(
        Invocation.method(
          #pullFromLocal,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
  @override
  _i3.Future<void> pullFromCloud() => (super.noSuchMethod(
        Invocation.method(
          #pullFromCloud,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
  @override
  _i3.Future<void> onFavouriteTap(_i5.Favourite? item) => (super.noSuchMethod(
        Invocation.method(
          #onFavouriteTap,
          [item],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
  @override
  _i3.Future<void> updateLocal() => (super.noSuchMethod(
        Invocation.method(
          #updateLocal,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
  @override
  void listenToReactiveValues(List<dynamic>? reactiveValues) =>
      super.noSuchMethod(
        Invocation.method(
          #listenToReactiveValues,
          [reactiveValues],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void addListener(void Function()? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void removeListener(void Function()? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [MediaService].
///
/// See the documentation for Mockito's code generation for more information.
class MockMediaService extends _i1.Mock implements _i22.MediaService {
  @override
  _i6.Reference get storageRef => (super.noSuchMethod(
        Invocation.getter(#storageRef),
        returnValue: _FakeReference_5(
          this,
          Invocation.getter(#storageRef),
        ),
        returnValueForMissingStub: _FakeReference_5(
          this,
          Invocation.getter(#storageRef),
        ),
      ) as _i6.Reference);
  @override
  int get listenersCount => (super.noSuchMethod(
        Invocation.getter(#listenersCount),
        returnValue: 0,
        returnValueForMissingStub: 0,
      ) as int);
  @override
  dynamic getFileFromCloud(_i6.Reference? ref) => super.noSuchMethod(
        Invocation.method(
          #getFileFromCloud,
          [ref],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i3.Future<_i23.XFile?> getImage({required bool? fromGallery}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getImage,
          [],
          {#fromGallery: fromGallery},
        ),
        returnValue: _i3.Future<_i23.XFile?>.value(),
        returnValueForMissingStub: _i3.Future<_i23.XFile?>.value(),
      ) as _i3.Future<_i23.XFile?>);
  @override
  dynamic uploadFileToCloud(
    String? path,
    String? name,
    _i6.Reference? ref,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #uploadFileToCloud,
          [
            path,
            name,
            ref,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void listenToReactiveValues(List<dynamic>? reactiveValues) =>
      super.noSuchMethod(
        Invocation.method(
          #listenToReactiveValues,
          [reactiveValues],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void addListener(void Function()? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void removeListener(void Function()? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [LocationService].
///
/// See the documentation for Mockito's code generation for more information.
class MockLocationService extends _i1.Mock implements _i24.LocationService {
  @override
  int get listenersCount => (super.noSuchMethod(
        Invocation.getter(#listenersCount),
        returnValue: 0,
        returnValueForMissingStub: 0,
      ) as int);
  @override
  _i3.Future<void> getCurrentLocation() => (super.noSuchMethod(
        Invocation.method(
          #getCurrentLocation,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
  @override
  void listenToReactiveValues(List<dynamic>? reactiveValues) =>
      super.noSuchMethod(
        Invocation.method(
          #listenToReactiveValues,
          [reactiveValues],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void addListener(void Function()? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void removeListener(void Function()? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
